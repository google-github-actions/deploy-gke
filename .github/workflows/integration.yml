# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Integration'

on:
  push:
    branches:
      - 'main'
      - 'release/**/*'
  pull_request:
    branches:
      - 'main'
      - 'release/**/*'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  integration:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v4'

    - uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: '${{ vars.WIF_PROVIDER_NAME }}'

    # The existing gke-deploy CLI will succeed or fail with logs with troubleshooting logs
    # Please refer to https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gke-deploy
    # for more information.
    - name: 'deploy-gke'
      uses: './'
      with:
        image: '${{ vars.IMAGE }}'
        app_name: '${{ vars.APP_NAME }}'
        region: '${{ vars.CLUSTER_REGION }}'
        cluster_name: '${{ vars.CLUSTER_NAME }}'
        project_id: '${{ vars.PROJECT_ID }}'
        namespace: '${{ vars.NAMESPACE }}'
        expose: '${{ vars.EXPOSE }}'

    - name: 'get credentials'
      uses: 'google-github-actions/get-gke-credentials@v2'
      with:
        cluster_name: '${{ vars.CLUSTER_NAME }}'
        location: '${{ vars.CLUSTER_REGION }}'
        project_id: '${{ vars.PROJECT_ID }}'

    - name: 'get-deployment'
      shell: bash
      run: |
        kubectl get deployment -n ${{ vars.NAMESPACE }}
